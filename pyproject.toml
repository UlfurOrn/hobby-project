[tool.poetry]
name = "hobby-project"
version = "0.0.0"
description = "My Hobby Project"
authors = ["ulfur <ulfurinn@gmail.com>"]
readme = "README.md"

package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
fastapi = { extras = ["standard"], version = "^0.112.2" }
pydantic = "^2.8.2"
pydantic-settings = "^2.4.0"
scrapy = "^2.11.2"
# Using asyncio extra as otherwise greenlet is not installed on some platforms: https://docs.sqlalchemy.org/en/20/orm/extensions/asyncio.html#asyncio-platform-installation-notes-including-apple-m1
sqlalchemy = {extras = ["asyncio"], version = "^2.0.35"}
uvicorn = { extras = ["standard"], version = "^0.30.6" }

[tool.poetry.group.dev.dependencies]
aiosqlite = "^0.20.0"
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
ruff = "^0.6.2"

[tool.ruff]
src = ["src/python"]
line-length = 120

[tool.ruff.lint]
select = [
    # Pyflakes: https://docs.astral.sh/ruff/rules/#pyflakes-f
    "F",
    # Pycodestyle: https://docs.astral.sh/ruff/rules/#pycodestyle-e-w
    "E",
    "W",
    # Isort: https://docs.astral.sh/ruff/rules/#isort-i
    "I",
    # flake8-bugbear: https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "B",
    # flake8-quotes: https://docs.astral.sh/ruff/rules/#flake8-quotes-q
    "Q",
]
fixable = [
    "F401",  # unused-import: https://docs.astral.sh/ruff/rules/unused-import/
    "I001",  # unsorted-imports: https://docs.astral.sh/ruff/rules/unsorted-imports/
]

[tool.pytest]
testpaths = [
    "tests"
]
pythonpath = [
    "src", # Code under test
    ".", # Makes tests.foo importable
]

asyncio_mode = "auto"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
